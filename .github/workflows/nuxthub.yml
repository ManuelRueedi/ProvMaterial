name: Deploy to NuxtHub

on:
  push:
    branches: [main, test] # one workflow run for each push
  workflow_dispatch: # manual button (optional)

concurrency: # cancel parallel runs per branch
  group: deploy-${{ github.ref }} # e.g. deploy-refs/heads/main
  cancel-in-progress: true

jobs:
  # ──────────────────────────────────────────────────────────────
  sync-test-branch:
    if: github.ref == 'refs/heads/main' # <─ only on main
    runs-on: ubuntu-latest
    permissions: { contents: write }

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Configure Git
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fast-forward or create test branch
        run: |
          MAIN_SHA=$(git rev-parse HEAD)
          if git ls-remote --exit-code --heads origin test; then
            git switch --force-create --track test origin/test
            git reset --hard "$MAIN_SHA"
          else
            git switch --create test
          fi

      - name: Push test
        run: git push origin test --force-with-lease
  # ──────────────────────────────────────────────────────────────
  deploy:
    needs: [sync-test-branch] # still exists → 'skipped' or 'success'
    runs-on: ubuntu-latest
    # Run when:
    #   * this is a main run AND the sync job succeeded,  OR
    #   * this is a test run (sync job is skipped here)
    if: |
      (github.ref == 'refs/heads/main' && needs.sync-test-branch.result == 'success') ||
      (github.ref == 'refs/heads/test')
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - run: pnpm install

      - name: Set branch-specific env & icons
        shell: bash
        run: |
          if [ "$GITHUB_REF" = "refs/heads/main" ]; then
            cp -r public/icons-production/* public/ 2>/dev/null || true
            echo "NODE_ENV=production"        >> "$GITHUB_ENV"
            echo "NUXT_PUBLIC_APP_ENV=production" >> "$GITHUB_ENV"
          else
            cp -r public/icons-preview/* public/ 2>/dev/null || true
            echo "NODE_ENV=development"       >> "$GITHUB_ENV"
            echo "NUXT_PUBLIC_APP_ENV=preview"    >> "$GITHUB_ENV"
          fi

      - name: Build & deploy
        uses: nuxt-hub/action@v2
        with:
          project-key: provmaterial-e54o
